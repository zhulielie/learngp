(dp1
S'output'
p2
S"<type 'exceptions.ImportError'> No module named zcommon"
p3
sS'layer'
p4
S'/Users/zhulielie/PycharmProjects/gap2py/web2py/applications/gap2py/controllers/index.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# \xe5\xb0\x9d\xe8\xaf\x95\n\nimport gluon.contrib.simplejson as sj\nfrom zcommon import *\n\n\ndef index():\n    user = session.user or \'\'\n    if user:\n        return dict(username=\'admin\')\n    else:\n        return redirect(\'/gap2py/login/\')\n\n\ndef something():\n    d = {}\n    d[\'diskstr\'] = \'\'\'df -h | grep replace | head -n 1 | awk \'{print $5}\' | tr -s " "\'\'\'\n    d[\'cpugetstr\'] = \'\'\'vmstat | sed -n \'3p\' | awk \'{print $17}\' | tr -s " "\'\'\'\n    d[\'memstr\'] = \'\'\'vmstat | sed -n \'3p\' | awk \'{print $5}\' | tr -s " "\'\'\'\n    d[\'uptimestr\'] = \'\'\'uptime | awk \'{print $1" "$2" "$3$4$5}\' | tr -s " "\'\'\'\n    return d\n\n\ndef get_config():\n    user = session.user or \'\'\n    if user:\n        f = open("%s%s" % (dpath(), "db/config.json"), "r");\n        try:\n            s = json.load(f)\n        except Exception as e:\n            print e\n        finally:\n            f.close()\n    else:\n        return redirect(\'/login/\')\n\n    return sj.dumps(s)\n\n\ndef get_status():\n    import commands\n    user = session.get(\'user\', \'\')\n    if user:\n        try:\n            if getplatform():\n                try:\n                    f = open("%s%s" % (dpath(), "db/getstatus.json"), "r")\n                    s = json.load(f)\n                except:\n                    pass\n                finally:\n                    f.close()\n            else:\n                try:\n                    diskstatus_ia = commands.getoutput(something().diskstr.replace(\'replace\', \'ad4\'))[:-1]\n                except:\n                    diskstatus_ia = 0\n\n                try:\n                    diskstatus_oa = verification_ssh(rsetting(), something().diskstr.replace(\'replace\', \'ad6s2\'))\n                    diskstatus_oa = (diskstatus_oa.split(\'\\n\'))[1:-1][0]\n                    diskstatus_oa = diskstatus_oa.strip(\'\\r\')[:-1]\n                except:\n                    diskstatus_oa = 0\n\n                try:\n                    memstr_ia = commands.getoutput(something().memstr)\n                    memstr_ia = "%.2f" % (float(memstr_ia) / 2048000)\n                    memstr_ia = float(memstr_ia) * 100\n                    memstr_ia = int(memstr_ia)\n                    memstr_ia = str(memstr_ia)\n\n                except:\n                    memstr_ia = 0\n                try:\n                    memstr_oa = verification_ssh(rsetting(), something().memstr)\n                    memstr_oa = (memstr_oa.split(\'\\n\'))[1:-1][0]\n                    memstr_oa = float(memstr_oa.strip(\'\\r\'))\n                    memstr_oa = "%.2f" % (memstr_oa / 2048000)\n                    memstr_oa = int(float(memstr_oa) * 100)\n                    memstr_oa = str(memstr_oa)\n                except:\n                    memstr_oa = 0\n\n                try:\n                    cpu_ia = commands.getoutput(something().cpugetstr)\n                except:\n                    cpu_ia = 0\n                try:\n                    cpu_oa = verification_ssh(rsetting(), something().cpugetstr)\n                    cpu_oa = (cpu_oa.split(\'\\n\'))[1:-1][0]\n                    cpu_oa = cpu_oa.strip(\'\\r\')\n\n                except:\n                    cpu_oa = 0\n\n                try:\n                    uptime_ia = commands.getoutput(something().uptimestr).strip(\'\\r\').replace(\',\', \' \')\n                except:\n                    uptime_ia = 0\n\n                try:\n                    uptime_oa = verification_ssh(rsetting(), something().uptimestr)\n                    uptime_oa = (uptime_oa.split(\'\\n\'))[1:-1][0]\n                    uptime_oa = uptime_oa.strip(\'\\r\').replace(\',\', \' \')\n                except:\n                    uptime_oa = 0\n\n                s = {"ia": {}, "oa": {}}\n                s[\'ia\'][\'cpu\'] = cpu_ia\n                s[\'ia\'][\'memory\'] = memstr_ia\n                s[\'ia\'][\'disk\'] = diskstatus_ia\n                s[\'ia\'][\'uptime\'] = uptime_ia\n                s[\'oa\'][\'cpu\'] = cpu_oa\n                s[\'oa\'][\'memory\'] = memstr_oa\n                s[\'oa\'][\'disk\'] = diskstatus_oa\n                s[\'oa\'][\'uptime\'] = uptime_oa\n        except:\n            pass\n\n    else:\n        return redirect(\'login/index\')\n    return sj.dumps(s)\n\n\ndef getlicense():\n    s = {}\n    try:\n        f = open("%s%s" % (dpath(), "db/license.json"), "r");\n        s = json.load(f)\n\n    except Exception as e:\n        print e\n    finally:\n        f.close()\n    if s.get(\'license\'):\n        return s[\'license\']\n    else:\n        return \'\'\n\n\ndef checklicensenow():\n    oldlicense = getlicense()\n    if oldlicense:\n        from mnLicense import MNLicense\n\n        key = ["9878*(&^^&)0LLIu(*&^))#$@!KJLKJj", "8midnet8", b\'1815122959500519\']\n        try:\n            FLAG = MNLicense(key).checklicense(oldlicense)\n        except Exception as e:\n            print e\n            FLAG = False\n    return FLAG\n\n\ndef license_index():\n    from mnLicense import MNLicense\n    key = ["9878*(&^^&)0LLIu(*&^))#$@!KJLKJj", "8midnet8", b\'1815122959500519\']\n    obj = MNLicense(key)\n    status = \'license Error\'\n    mash = obj.creatmash(obj.creatdict())\n\n    if request.method == \'GET\':\n        ol = getlicense()\n        f = False\n    else:\n        ol = request.form.get(\'license\', \'\')\n        f = True\n    if ol:\n        try:\n\n            if obj.checklicense(ol):\n                status = \'License \'\n            if f:\n                save_license(ol)\n        except:\n            pass\n    response.view = \'license.html\'\n    return dict(status=status, mash=mash)\n\n\ndef save_license(license):\n    s = False\n    try:\n        f = open("%s%s" % (dpath(), "db/license.json"), "w");\n        json.dump({"license": license}, f)\n        s = True\n    except:\n        pass\n    finally:\n        f.close()\n    return s\n\n\ndef skin_config():\n    user = session.get(\'user\', \'\')\n    if user:\n        response.view = \'skin-config.html\'\n        return dict()\n    else:\n        return redirect(\'login_get\')\n\n\ndef getlog():\n    s = {}\n    if getplatform():\n        try:\n            f = open("%s%s" % (dpath(), "db/log.json"), "r")\n            s = f.read()\n        except:\n            pass\n        finally:\n            f.close()\n    else:\n        try:\n            import commands\n            l = commands.getoutput("dmesg -a")\n            s = (l.split(\'\\n\'))\n        except:\n            pass\n    return s\n\n\ndef getoalog():\n    s = {}\n    if getplatform():\n        try:\n            f = open("%s%s" % (dpath(), "db/log.json"), "r")\n            s = f.read()\n        except:\n            pass\n        finally:\n            f.close()\n    else:\n        oacontent = "dmesg -a"\n        try:\n            l = verification_ssh(rsetting(), oacontent)\n            s = (l.split(\'\\n\'))[1:-1]\n\n\n        except:\n            pass\n\n    return s\n\n\ndef get_log():\n    user = session.user or \'\'\n    if user:\n        data = {\'ia\': [], \'iacount\': 0, \'oa\': [], \'oacount\': 0}\n        oalog = []\n        ialog = []\n\n        try:\n            ialogs = getlog()\n            iacount = 0\n            oacount = 0\n            for x in ialogs:\n                if len(x) > 5:\n                    x = x.replace(\'\\r\', \'\').replace(\',\', \'\')\n\n                    ialog.append(unicode(x, errors=\'ignore\'))\n                    iacount += 1\n            data[\'ia\'] = ialog\n            data[\'iacount\'] = iacount\n        except Exception as e:\n            print e\n        try:\n            oalogs = getoalog()\n            for x in oalogs:\n                if len(x) > 5:\n                    x = x.replace(\'\\r\', \'\').replace(\',\', \'\')\n\n                    oalog.append(unicode(x, errors=\'ignore\'))\n                    oacount += 1\n            data[\'oa\'] = oalog\n            data[\'oacount\'] = oacount\n        except Exception as e:\n            print e\n\n        try:\n            print data\n            feedback = sj.dumps(data)\n        except Exception as e:\n            print e\n            feedback = data\n        return feedback\n    else:\n        return redirect(\'/login/index\')\n\n\ndef save():\n    data = {\'succ\': False}\n    user = session.get(\'user\', \'\')\n    if user:\n        cmd = request.vars.cmd\n        config = request.vars.config\n        try:\n            f = open("%s%s" % (dpath(), "db/config.json"), \'w\')\n            json_config = json.loads(config)\n            jc = json_config.get(\'changepass\')\n            if jc:\n                changepass(json_config[\'changepass\'])\n                del json_config[\'changepass\']\n\n            data[\'succ\'] = setconfig(json_config)\n        except Exception as e:\n            print e\n\n            data[\'succ\'] = False\n        finally:\n            f.close()\n        return sj.dumps(data)\n    else:\n        return redirect(\'/gap2py/login/index\')\n\n\ndef changepass(passw):\n    if passw:\n        if passw[\'oldpass\'] and passw[\'newpass1\'] and passw[\'newpass2\']:\n            if passw[\'newpass1\'] == passw[\'newpass2\']:\n                if len(passw[\'newpass1\']) >= 6:\n                    try:\n                        s = getusers()\n                        import hashlib\n                        m2 = hashlib.md5()\n                        m2.update(passw[\'newpass1\'])\n                        mold = hashlib.md5()\n                        mold.update(passw[\'oldpass\'])\n                        if mold.hexdigest() == s[\'password\']:\n                            s[\'password\'] = m2.hexdigest()\n                            setusers(s)\n\n                    except Exception as e:\n                        print e\n\n\ndef write_iarule(rulename, rules):\n\n\n    cotent = \'\'\n    for rule in rules:\n        if rulename in ["OUT_TCP", "OUT_UDP", "OUT_FTP", "OUT_ORA"]:\n            cotent += \'\'\'PORT=%s:%s\\n\'\'\' % (rule[\'myadr\'], rule[\'myport\'])\n        else:\n            cotent += \'\'\'SERVER=%s:%s-%s:%s\\n\'\'\' % (rule[\'hisadr\'], rule[\'hisport\'], rule[\'myadr\'], rule[\'myport\'])\n\n    try:\n\n        if getplatform():\n            rfname = open("%s%s%s" % (dpath(), "db/ia/", rulename), "w")\n        else:\n            rfname = open("%s%s" % ("/usr/nc-home/sox/", rulename), "w")\n\n        rfname.write(cotent)\n    except Exception as e:\n        print e\n    finally:\n        rfname.close()\n\n\ndef write_ia_detail(config):\n\n    if config[\'dt\'][\'rd\'] == 0:\n        rs = [ "IN_TCP", "IN_UDP", "IN_FTP", "IN_ORA"]\n    elif config[\'dt\'][\'rd\'] == 1:\n        rs = ["OUT_TCP", "OUT_UDP", "OUT_FTP", "OUT_ORA"]\n    else:\n        rs = ["OUT_TCP", "OUT_UDP", "OUT_FTP", "OUT_ORA", "IN_TCP", "IN_UDP", "IN_FTP", "IN_ORA"]\n    for i in rs:\n        if config[i][\'on\'] == \'1\':\n            write_iarule(i, config[i][\'rules\'])\n\n\ndef write_oarule(rulename, rules):\n\n\n\n    cotent = \'\'\n    flag = True\n    for rule in rules:\n        if rulename in ["IN_TCP", "IN_UDP", "IN_FTP", "IN_ORA"]:\n            cotent += \'\'\'echo \'PORT=%s:%s\' %s  /usr/nc-home/sox/%s;\'\'\' % (\n                rule[\'myadr\'], rule[\'myport\'], \'>\' if flag else \'>>\', rulename)\n        else:\n            cotent += \'\'\'echo \'SERVER=%s:%s-%s:%s\' %s /usr/nc-home/sox/%s;\'\'\' % (\n                rule[\'hisadr\'], rule[\'hisport\'], rule[\'myadr\'], rule[\'myport\'], \'>\' if flag else \'>>\', rulename)\n        flag = False\n    if not rules:\n        cotent += \'\'\'echo \'\' > /usr/nc-home/sox/%s;\'\'\' % rulename\n\n    if getplatform():\n        try:\n            rfname = open("%s%s%s" % (dpath(), "db/oa/", rulename), "w")\n            rfname.write(cotent)\n        except Exception as e:\n            print e\n        finally:\n            rfname.close()\n    else:\n        try:\n            verification_ssh(rsetting(), cotent)\n        except Exception as e:\n\n            print e\n\n\ndef write_oa_detail(config):\n    if config[\'dt\'][\'rd\'] == 0:\n        rs = [ "IN_TCP", "IN_UDP", "IN_FTP", "IN_ORA"]\n    elif config[\'dt\'][\'rd\'] == 1:\n        rs = ["OUT_TCP", "OUT_UDP", "OUT_FTP", "OUT_ORA"]\n    else:\n        rs = ["OUT_TCP", "OUT_UDP", "OUT_FTP", "OUT_ORA", "IN_TCP", "IN_UDP", "IN_FTP", "IN_ORA"]\n    for i in rs:\n        if config[i][\'on\'] == \'1\':\n            write_oarule(i, config[i][\'rules\'])\n\n\n\ndef setconfig(config):\n    try:\n        f = open("%s%s" % (dpath(), "db/config.json"), "w");\n        json.dump(config, f)\n        try:\n            dt = getdtype()\n            config[\'dt\'] = dt\n            write_ia_rcconf(config[\'ia\'])\n            write_oa_rcconf(config[\'oa\'])\n            write_ia_rclocal(config)\n            write_oa_rclocal(config)\n            write_ia_router(config[\'ia\'][\'router\'])\n            write_oa_router(config[\'oa\'][\'router\'])\n            write_ia_carp(config[\'ia\'][\'hs\'])\n            write_oa_carp(config[\'oa\'][\'hs\'])\n            write_ia_sox(config)\n            write_oa_sox(config)\n            write_ia_detail(config)\n            write_oa_detail(config)\n            try:\n                n = open("%s%s" % (dpath(), "db/needrestart"), \'w\')\n            except Exception as e:\n                print e\n            finally:\n                n.close()\n        except Exception as e:\n            print e\n\n        flag = True\n    except Exception as e:\n        print e\n        flag = False\n    finally:\n        f.close()\n\n    return flag\n\n\ndef write_oa_rcconf(config):\n    if getplatform():\n        tmp_rc = open("%s%s" % (dpath(), "db/oa/rc.local"), "w")\n    else:\n        tmp_rc = \'/etc/rc.local\'\n\n    oacontent = \'\'\'echo \'sshd_enable="YES"\' > %s;\'\'\' % tmp_rc\n    oacontent += \'\'\'echo \'update_motd="NO"\' >> %s;\'\'\' % tmp_rc\n    oacontent += \'\'\'echo \'gateway_enable="YES"\' >> %s;\'\'\' % tmp_rc\n    oacontent += \'\'\'echo \'syslogd_enable="YES"\' >> %s;\'\'\' % tmp_rc\n    oacontent += \'\'\'echo \'syslogd_flags="-ss" \' >> %s;\'\'\' % tmp_rc\n    if config[\'defaultgateway\']:\n        oacontent += \'\'\'echo \'defaultrouter="%s"\' >> %s;\'\'\' % (config[\'defaultgateway\'], tmp_rc)\n    oacontent += \'\'\'echo \'hostname="MFOA"\' >> %s;\'\'\' % tmp_rc\n    ind = -1\n    for i in config[\'interface\']:\n        ind += 1\n        oacontent += \'\'\'echo \'ifconfig_%s_alias%s="inet %s netmask %s"\' >> %s;\'\'\' % (\n            i[\'name\'], ind, i[\'adr\'], i[\'netmask\'], tmp_rc)\n    oacontent += \'\'\'echo \'ifconfig_em4="inet 2.2.2.2 netmask 255.255.255.0"\' >> %s;\'\'\' % tmp_rc\n    if getplatform():\n        tmp_rc.write(oacontent)\n        tmp_rc.close()\n    else:\n        try:\n            verification_ssh(rsetting(), oacontent)\n        except Exception as e:\n            print e\n\n\ndef write_oa_rclocal(config):\n    if getplatform():\n        tmp_rc = open("%s%s" % (dpath(), "db/oa/rc.local"), "w")\n    else:\n        tmp_rc = \'/etc/rc.local\'\n\n    adx = config[\'dt\'][\'ad\']\n\n    oacontent = \'\'\'echo \'fsck_ufs -y /dev/ad%s2 >/dev/null\' > %s;\'\'\' % (adx, tmp_rc)\n    oacontent += \'\'\'echo \'mount /dev/ad%ss2 /usr/nc-home\' >> %s;\'\'\' % (adx, tmp_rc)\n    oacontent += \'\'\'echo \'if [ -f /usr/nc-home/baktgz/patch.tgz ]; then\' >> %s;\'\'\' % (tmp_rc)\n    oacontent += \'\'\'echo \'\ttar xzfP /usr/nc-home/baktgz/patch.tgz\' >> %s;\'\'\' % (tmp_rc)\n    oacontent += \'\'\'echo \'\trm /usr/nc-home/baktgz/patch.tgz\' >> %s;\'\'\' % (tmp_rc)\n    oacontent += \'\'\'echo \'fi\' >> %s;\'\'\' % (tmp_rc)\n    oacontent += \'\'\'echo \'ifconfig em5 up\' >> %s;\'\'\' % (tmp_rc)\n    oacontent += \'\'\'echo \'sleep 2\' >> %s;\'\'\' % (tmp_rc)\n    oacontent += \'\'\'echo \'ifconfig em4 up\' >> %s;\'\'\' % (tmp_rc)\n    oacontent += \'\'\'echo \'sleep 2\' >> %s;\'\'\' % (tmp_rc)\n    if config[\'dt\'][\'rt\'] == 1:\n        oacontent += \'\'\'echo \'sysctl -w hw.owd_recvif=em5\' >> %s;\'\'\' % (tmp_rc)\n        oacontent += \'\'\'echo \'sysctl -w hw.owd_sendif=em5\' >> %s;\'\'\' % (tmp_rc)\n        oacontent += \'\'\'echo \'cd /usr/nc-home/bin/ && ./prog.sh &\' >> %s;\'\'\' % (tmp_rc)\n        oacontent += \'\'\'echo \'cd /usr/nc-home/socks && ./sockd -D -f socks.conf\' >> %s;\'\'\' % (tmp_rc)\n    else:\n        oacontent += \'\'\'echo \'ipnat -CF -f /usr/nc-home/gap2py/db/on.conf\' >> %s;\'\'\' % (tmp_rc)\n\n    if getplatform():\n        tmp_rc.write(oacontent)\n        tmp_rc.close()\n    else:\n        try:\n            verification_ssh(rsetting(), oacontent)\n        except Exception as e:\n            print e\n\n\ndef write_oa_router(config):\n    if getplatform():\n        tmp_rc = open("%s%s" % (dpath(), "db/oa/router.conf"), "w")\n    else:\n        tmp_rc = \'/etc/rc.local\'\n\n    oacontent = \'\'\n    begin = True\n\n    for i in config:\n        oacontent += \'\'\'echo \'route add %s %s %s\' %s /usr/nc-home/conf/router.conf;\'\'\' % (\n            i[\'network\'], i[\'gateway\'], i[\'netmask\'], \'> \' if begin else \'>>\')\n        begin = False\n    if not config:\n        oacontent = \'\'\'echo \'\' > /usr/nc-home/conf/router.conf;\'\'\'\n    if getplatform():\n        try:\n            tmp_rc.write(oacontent)\n        except Exception as e:\n            print e\n        finally:\n            tmp_rc.close()\n    else:\n\n        try:\n            verification_ssh(rsetting(), oacontent)\n        except Exception as e:\n            print e\n\n\ndef write_oa_carp(config):\n    oacontent = \'\'\n    begin = True\n    # for i in config[\'rules\']:\n\n    if getplatform():\n        tmp_rc = open("%s%s" % (dpath(), "db/oa/carp.conf"), "w")\n\n    if config[\'on\'] == \'0\' or not config[\'rules\']:\n        oacontent = \'\'\'echo \'\' > /usr/nc-home/conf/carp.conf;\'\'\'\n    else:\n        for i in config[\'rules\']:\n            if (i[\'on\'] == \'1\'):\n                oacontent += \'\'\'echo \'ifconfig carp%s create %s netmask %s vhid %s advskew %s\' %s /usr/nc-home/conf/carp.conf; \'\'\' % (\n                    i[\'gid\'], i[\'adr\'], i[\'netmask\'], i[\'gid\'], \'100\' if i[\'master\'] == \'1\' else \'101\',\n                    \'> \' if begin else \'>>\')\n\n                begin = False\n    try:\n        if getplatform():\n            tmp_rc.write(oacontent)\n        else:\n            verification_ssh(rsetting(), oacontent)\n    except Exception as e:\n        print "write oa carp error:%s" % str(e)\n\n\ndef write_oa_sox(config):\n\n\n    if getplatform():\n        tmp_sox = open("%s%s" % (dpath(), "db/oa/nsox.conf"), "w")\n    else:\n        if config[\'dt\'][\'rt\'] == 0:\n\n            tmp_sox = \'/usr/nc-home/sox/nsox.conf\'\n        else:\n            tmp_sox = \'/usr/nc-home/sox/sox.conf\'\n\n\n\n    if config[\'dt\'][\'rt\'] == 0:\n        flag_type = config[\'dt\'][\'rd\']\n        if flag_type == 0:\n            # jinzhuru\n            if config["IN_TCP"][\'on\'] == \'1\':\n                oacontent = \'\'\'echo \'map em4 0.0.0.0/0 -> 0/32\' > %s;\'\'\' % tmp_sox\n                for rule in config[\'IN_TCP\'][\'rules\']:\n                    oacontent += \'\'\'echo \'rdr em0 %s/32 port %s -> 2.2.2.2 port %s\' >>%s;\'\'\' % (\n                        rule[\'myadr\'], rule[\'myport\'], rule[\'myport\'], tmp_sox)\n\n\n\n        elif flag_type == 1:\n            # jinzhunchu\n\n            if config["OUT_TCP"][\'on\'] == \'1\':\n                oacontent = \'\'\'echo \'map em0 0.0.0.0/0 -> 0/32\' > %s;\'\'\' % tmp_sox\n                for rule in config[\'OUT_TCP\'][\'rules\']:\n                    oacontent += \'\'\'echo \'rdr em4 0.0.0.0/0 port %s -> %s port %s\' >>%s;\'\'\' % (\n                        rule[\'myport\'], rule[\'hisadr\'], rule[\'hisport\'], tmp_sox)\n        else:\n            oacontent = \'\'\n            # zhunru he zhunchu\n            if config["IN_TCP"][\'on\'] == \'1\':\n\n                oacontent += \'\'\'echo \'map em4 0.0.0.0/0 -> 0/32\' > %s;\'\'\' % tmp_sox\n                for rule in config[\'IN_TCP\'][\'rules\']:\n                    oacontent += \'\'\'echo \'rdr em0 %s/32 port %s -> 2.2.2.2 port %s\' >>%s;\'\'\' % (\n                        rule[\'myadr\'], rule[\'myport\'], rule[\'myport\'], tmp_sox)\n\n            if config["OUT_TCP"][\'on\'] == \'1\':\n                oacontent += \'\'\'echo \'map em0 0.0.0.0/0 -> 0/32\' > %s;\'\'\' % tmp_sox\n                for rule in config[\'OUT_TCP\'][\'rules\']:\n                    oacontent += \'\'\'echo \'rdr em4 0.0.0.0/0 port %s -> %s port %s\' >>%s;\'\'\' % (\n                        rule[\'myport\'], rule[\'hisadr\'], rule[\'hisport\'], tmp_sox)\n    else:\n        oacontent = \'\'\'echo \'COMMIN=/dev/owd0\' > %s;\'\'\' % tmp_sox\n        oacontent += \'\'\'echo \'COMMOUT=/dev/owd0\' >> %s;\'\'\' % tmp_sox\n\n        flag_type = config[\'dt\'][\'rd\']\n        if flag_type == 0:\n            # jinzhuru\n\n            rs = [ "IN_TCP", "IN_UDP", "IN_FTP", "IN_ORA"]\n\n        elif flag_type == 1:\n            # jinzhunchu\n            rs = ["OUT_TCP", "OUT_UDP", "OUT_FTP", "OUT_ORA"]\n\n        else:\n\n\n            rs = ["OUT_TCP", "OUT_UDP", "OUT_FTP", "OUT_ORA", "IN_TCP", "IN_UDP", "IN_FTP", "IN_ORA"]\n        for i in rs:\n            if config[i][\'on\'] == \'1\':\n                oacontent += \'\'\'echo \'FILE=/usr/nc-home/sox/%s\'>> %s;\'\'\' % (i, tmp_sox)\n        oacontent += \'\'\'echo \'LOG=1\' >> %s;\'\'\' % tmp_sox\n        oacontent += \'\'\'echo \'TCPIDLETIMEOUT=604800\' >> %s;\'\'\' % tmp_sox\n        realpath = \'/usr/nc-home/sox/sox.conf.new\'\n\n    if getplatform():\n        tmp_sox.write(oacontent)\n        tmp_sox.close()\n    else:\n        try:\n            verification_ssh(rsetting(), oacontent)\n        except Exception as e:\n            print e\n\n\n\ndef write_ia_rcconf(config):\n    try:\n        if getplatform():\n            bsdfile_rcconf = open("%s%s" % (dpath(), "db/ia/rc.conf"), "w")\n        else:\n            bsdfile_rcconf = open("/etc/rc.conf", "w")\n        iacontent = \'sshd_enable="YES"\\n\'\n        iacontent += \'update_motd="NO"\\n\'\n        iacontent += \'gateway_enable="YES"\\n\'\n        iacontent += \'fsck_enable="YES"\\n\'  # add\n        iacontent += \'syslogd_enable="YES"\\n\'\n        iacontent += \'syslogd_flags="-ss"\\n\'\n        if config[\'defaultgateway\']:\n            iacontent += \'defaultrouter="%s"\\n\' % config[\'defaultgateway\']\n        iacontent += \'hostname="MFIA"\\n\'\n        ind = -1\n        for i in config[\'interface\']:\n            ind += 1\n            iacontent += \'ifconfig_%s_alias%s="inet %s netmask %s"\\n\' % (i[\'name\'], ind, i[\'adr\'], i[\'netmask\'])\n\n        iacontent += \'ifconfig_em4="inet 2.2.2.1 netmask 255.255.255.0"\\n\'\n        iacontent += \'ifconfig_em5="inet 5.5.5.1 netmask 255.255.255.0"\\n\'\n        bsdfile_rcconf.write(iacontent)\n        bsdfile_rcconf.close()\n        flag = True\n    except Exception as e:\n        print e\n        flag = False\n    finally:\n        if bsdfile_rcconf:\n            bsdfile_rcconf.close()\n    return flag\n\n\ndef write_ia_rclocal(config):\n    try:\n        if getplatform():\n            bsdfile_rcconf = open("%s%s" % (dpath(), "db/ia/rc.local"), "w")\n        else:\n            bsdfile_rcconf = open("/etc/rc.local", "w")\n\n        iacontent = \'if [ -f /usr/nc-home/baktgz/patch.tgz ]; then\\n\'\n        iacontent += \'\ttar xzfP /usr/nc-home/baktgz/patch.tgz\\n\'\n        iacontent += \'\trm /usr/nc-home/baktgz/patch.tgz\\n\'\n        iacontent += \'fi\\n\'\n        iacontent += \'ifconfig em4 up\\n\'\n        iacontent += \'sleep 2\\n\'\n        iacontent += \'ifconfig em5 up\\n\'\n        iacontent += \'sleep 2\\n\'\n        iacontent += \'ln -s /usr/nc-home/local /usr/local\\n\'\n        iacontent += \'ln -s /usr/nc-home/libstdc++.so.6 /usr/lib/libstdc++.so.6\\n\'\n        iacontent += \'ln -s /usr/nc-home/uniq /usr/bin/uniq\\n\'\n        if config[\'dt\'][\'rt\'] == 1:\n            iacontent += \'sysctl -w hw.owd_recvif=em5\\n\'\n            iacontent += \'sysctl -w hw.owd_sendif=em5\\n\'\n            iacontent += \'cd /usr/nc-home/bin/ && ./prog.sh &\\n\'\n            iacontent += \'/usr/nc-home/bin/db.sh\\n\'\n        else:\n\n            iacontent += \'ipnat -CF -f /usr/nc-home/gap2py/db/in.conf\\n\'\n\n        bsdfile_rcconf.write(iacontent)\n        bsdfile_rcconf.close()\n        flag = True\n    except Exception as e:\n        print e\n        flag = False\n    finally:\n        if bsdfile_rcconf:\n            bsdfile_rcconf.close()\n    return flag\n\n\ndef write_ia_router(config):\n    try:\n        if getplatform():\n            bsdfile_router = open("%s%s" % (dpath(), "db/ia/router.conf"), "w")\n        else:\n            bsdfile_router = open("/etc/router.conf", "w")\n        iacontent = \'\'\n        for i in config:\n            iacontent += \'route add %s %s %s\\n\' % (i[\'network\'], i[\'gateway\'], i[\'netmask\'])\n        bsdfile_router.write(iacontent)\n        flag = True\n    except Exception as e:\n        print e\n        flag = False\n    finally:\n        bsdfile_router.close()\n    return flag\n\n\ndef write_ia_carp(config):\n    try:\n\n        bsdfile_router = open("%s%s" % (dpath(), "db/ia/carp.conf"), "w")\n        iacontent = \'\'\n        if config[\'on\'] == \'1\':\n            for i in config[\'rules\']:\n                iacontent += \'ifconfig carp%s create %s netmask %s vhid %s advskew %s\\n\' % (\n                    i[\'gid\'], i[\'adr\'], i[\'netmask\'], i[\'gid\'], \'100\' if i[\'master\'] == \'1\' else \'101\',)\n            bsdfile_router.write(iacontent)\n        flag = True\n    except Exception as e:\n        flag = False\n        print "Write ia carp error :%s" % str(e)\n    finally:\n        bsdfile_router.close()\n    return flag\n\n\ndef write_ia_sox(config):\n\n    try:\n        if getplatform():\n            bsdfile_router = open("%s%s" % (dpath(), "db/ia/nsox.conf"), "w")\n        else:\n            if config[\'dt\'][\'rt\'] == 0:\n\n                bsdfile_router = open("/usr/nc-home/sox/nsox.conf", "w")\n            else:\n                bsdfile_router = open("/usr/nc-home/sox/sox.conf", "w")\n\n        if config[\'dt\'][\'rt\'] == 0:\n\n            flag_type = config[\'dt\'][\'rd\']\n            if flag_type == 0:\n                # jinzhunru\n                if config["IN_TCP"][\'on\'] == \'1\':\n                    iacontent = \'map em0 0.0.0.0/0 -> 0/32\\n\'\n\n                    for rule in config[\'IN_TCP\'][\'rules\']:\n                        iacontent += \'\'\'rdr em4 0.0.0.0/0 port %s -> %s port %s\\n\'\'\' % (\n                            rule[\'myport\'], rule[\'hisadr\'], rule[\'hisport\'])\n\n            elif flag_type == 1:\n                # jinzhunchu\n\n\n                if config["OUT_TCP"][\'on\'] == \'1\':\n                    iacontent = \'map em4 0.0.0.0/0 -> 0/32\\n\'\n\n                    for rule in config[\'OUT_TCP\'][\'rules\']:\n                        iacontent += \'\'\'rdr em0 %s/32 port %s -> 2.2.2.2 port %s\\n\'\'\' % (\n                            rule[\'myadr\'], rule[\'myport\'], rule[\'myport\'])\n\n\n\n            else:\n                # zhunru he zhunchu\n\n                iacontent = \'\'\n\n\n                if config["OUT_TCP"][\'on\'] == \'1\':\n                    iacontent += \'map em4 0.0.0.0/0 -> 0/32\\n\'\n                    for rule in config[\'OUT_TCP\'][\'rules\']:\n                        iacontent += \'\'\'rdr em0 %s/32 port %s -> 2.2.2.2 port %s\\n\'\'\' % (\n                            rule[\'myadr\'], rule[\'myport\'], rule[\'myport\'])\n\n                if config["IN_TCP"][\'on\'] == \'1\':\n\n                    iacontent += \'map em0 0.0.0.0/0 -> 0/32\\n\'\n                    for rule in config[\'IN_TCP\'][\'rules\']:\n                        iacontent += \'\'\'rdr em4 0.0.0.0/0 port %s -> %s port %s\\n\'\'\' % (\n                            rule[\'myport\'], rule[\'hisadr\'], rule[\'hisport\'])\n        else:\n            iacontent = \'COMMIN=/dev/owd0\\n\'\n            iacontent += \'COMMOUT=/dev/owd0\\n\'\n\n            flag_type = config[\'dt\'][\'rd\']\n            if flag_type == 0:\n                rs = ["IN_TCP", "IN_UDP", "IN_FTP", "IN_ORA"]\n            elif flag_type == 1:\n                rs = ["OUT_TCP", "OUT_UDP", "OUT_FTP", "OUT_ORA"]\n            else:\n                rs = ["OUT_TCP", "OUT_UDP", "OUT_FTP", "OUT_ORA", "IN_TCP", "IN_UDP", "IN_FTP", "IN_ORA"]\n            for i in rs:\n                if config[i][\'on\'] == \'1\':\n                    iacontent += \'FILE=/usr/nc-home/sox/%s\\n\' % i\n            iacontent += \'LOG=0\\n\'\n            iacontent += \'TCPIDLETIMEOUT=604800\\n\'\n\n        bsdfile_router.write(iacontent)\n        flag = True\n    except Exception as e:\n        print e\n        flag = False\n    finally:\n        bsdfile_router.close()\n    return flag\n\n\ndef write_owdiarule(rulename, rules):\n    try:\n        if getplatform():\n            rfname = open("%s%s%s" % (dpath(), "db/", rulename), "w")\n        else:\n            rfname = open("%s%s" % ("/usr/nc-home/sox/", rulename), "w")\n        cotent = \'\'\n        for rule in rules:\n            if rulename in ["OUT_TCP", "OUT_UDP", "OUT_FTP", "OUT_ORA"]:\n                cotent += \'\'\'PORT=%s:%s\\n\'\'\' % (rule[\'myadr\'], rule[\'myport\'])\n            else:\n                cotent += \'\'\'SERVER=%s:%s-%s:%s\\n\'\'\' % (rule[\'hisadr\'], rule[\'hisport\'], rule[\'myadr\'], rule[\'myport\'])\n        rfname.write(cotent)\n    except Exception as e:\n        print e\n    finally:\n        rfname.close()\n\n\ndef write_owdoarule(rulename, rules):\n    cotent = \'\'\n    flag = True\n    for rule in rules:\n        if rulename in ["IN_TCP", "IN_UDP", "IN_FTP", "IN_ORA"]:\n            cotent += \'\'\'echo \'PORT=%s:%s\' %s  /usr/nc-home/sox/%s;\'\'\' % (\n                rule[\'myadr\'], rule[\'myport\'], \'>\' if flag else \'>>\', rulename)\n        else:\n            cotent += \'\'\'echo \'SERVER=%s:%s-%s:%s\' %s /usr/nc-home/sox/%s;\'\'\' % (\n                rule[\'hisadr\'], rule[\'hisport\'], rule[\'myadr\'], rule[\'myport\'], \'>\' if flag else \'>>\', rulename)\n        flag = False\n    if not rules:\n        cotent += \'\'\'echo \'\' > /usr/nc-home/sox/%s;\'\'\' % rulename\n    try:\n        verification_ssh(rsetting(), cotent)\n    except Exception as e:\n        print e\n\nresponse._vars=response._caller(index)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__hash__'
p12
S"<method-wrapper '__hash__' of exceptions.ImportError object>"
p13
sS'__setattr__'
p14
S"<method-wrapper '__setattr__' of exceptions.ImportError object>"
p15
sS'__reduce_ex__'
p16
S'<built-in method __reduce_ex__ of exceptions.ImportError object>'
p17
sS'__getslice__'
p18
S"<method-wrapper '__getslice__' of exceptions.ImportError object>"
p19
sS'__getitem__'
p20
S"<method-wrapper '__getitem__' of exceptions.ImportError object>"
p21
sS'__setstate__'
p22
S'<built-in method __setstate__ of exceptions.ImportError object>'
p23
sS'args'
p24
S"('No module named zcommon',)"
p25
sS'__reduce__'
p26
S'<built-in method __reduce__ of exceptions.ImportError object>'
p27
sS'__str__'
p28
S"<method-wrapper '__str__' of exceptions.ImportError object>"
p29
sS'__format__'
p30
S'<built-in method __format__ of exceptions.ImportError object>'
p31
sS'__getattribute__'
p32
S"<method-wrapper '__getattribute__' of exceptions.ImportError object>"
p33
sS'__class__'
p34
S"<type 'exceptions.ImportError'>"
p35
sS'__unicode__'
p36
S'<built-in method __unicode__ of exceptions.ImportError object>'
p37
sS'__delattr__'
p38
S"<method-wrapper '__delattr__' of exceptions.ImportError object>"
p39
sS'__subclasshook__'
p40
S'<built-in method __subclasshook__ of type object>'
p41
sS'__repr__'
p42
S"<method-wrapper '__repr__' of exceptions.ImportError object>"
p43
sS'__dict__'
p44
S'{}'
p45
sS'__sizeof__'
p46
S'<built-in method __sizeof__ of exceptions.ImportError object>'
p47
sS'__doc__'
p48
S'"Import can\'t find module, or can\'t find name in module."'
p49
sS'__init__'
p50
S"<method-wrapper '__init__' of exceptions.ImportError object>"
p51
sS'__new__'
p52
S'<built-in method __new__ of type object>'
p53
ssS'evalue'
p54
S'No module named zcommon'
p55
sS'request'
p56
cgluon.html
XML_unpickle
p57
(S'sbp\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">ajax</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">application</td><td style="vertical-align:top;">:</td><td><div>gap2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cid</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">controller</td><td style="vertical-align:top;">:</td><td><div>index</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">csrftoken</td><td style="vertical-align:top;">:</td><td><div>oUC4jOBlE7Ff3AlEbVp2SoXW70T2NdL6<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_admin</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-3eb85eab-7359-4e30-8e0e-d52380e33a95<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_first</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-54498cf6-4442-4789-bd67-72c977f0de77<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_gap2py</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-48509dd2-3543-4f07-9888-086d381b683a<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_tp</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-2d1dd9cc-f979-4fd5-ba47-fee966a6f1a3<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_welcome</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-93ec3a7c-d600-4206-97ec-f4c07750baf4<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">sessionid</td><td style="vertical-align:top;">:</td><td><div>o6nv6ki5tf8eebdsssv34sdrezmc4j70<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">env</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_ENCODING</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate, sdch</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_LANGUAGE</td><td style="vertical-align:top;">:</td><td><div>zh-CN,zh;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CACHE_CONTROL</td><td style="vertical-align:top;">:</td><td><div>max-age=0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CONNECTION</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_COOKIE</td><td style="vertical-align:top;">:</td><td><div>session_id_first=127.0.0.1-54498cf6-4442-4789-bd67-72c977f0de77; session_id_tp=127.0.0.1-2d1dd9cc-f979-4fd5-ba47-fee966a6f1a3; sessionid=o6nv6ki5tf8eebdsssv34sdrezmc4j70; csrftoken=oUC4jOBlE7Ff3AlEbVp2SoXW70T2NdL6; session_id_welcome=127.0.0.1-93ec3a7c-d600-4206-97ec-f4c07750baf4; session_id_gap2py=127.0.0.1-48509dd2-3543-4f07-9888-086d381b683a; session_id_admin=127.0.0.1-3eb85eab-7359-4e30-8e0e-d52380e33a95</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_HOST</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_REFERER</td><td style="vertical-align:top;">:</td><td><div>http://127.0.0.1:8000/admin/default/design/gap2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_UPGRADE_INSECURE_REQUESTS</td><td style="vertical-align:top;">:</td><td><div>1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_USER_AGENT</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.110 Safari/537.36</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">PATH_INFO</td><td style="vertical-align:top;">:</td><td><div>/gap2py/index/index</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">QUERY_STRING</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_ADDR</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_PORT</td><td style="vertical-align:top;">:</td><td><div>59227</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REQUEST_METHOD</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SCRIPT_NAME</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_NAME</td><td style="vertical-align:top;">:</td><td><div>zhulieliedeMacBook-Pro.local</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PORT</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PROTOCOL</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_SOFTWARE</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/Users/zhulielie/PycharmProjects/gap2py/web2py/applications/gap2py/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/Users/zhulielie/PycharmProjects/gap2py/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x105b862d8: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 0, &#x27;with_scheduler&#x27;: False, &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;zhulieliedeMacBook-Pro.local&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;port&#x27;: 8000, &#x27;print_errors&#x27;: False, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/Users/zhulielie/PycharmProjects/gap2py/web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;gae&#x27;: None, &#x27;password&#x27;: &#x27;******&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/Users/zhulielie/PycharmProjects/gap2py/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_encoding</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate, sdch</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_language</td><td style="vertical-align:top;">:</td><td><div>zh-CN,zh;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_cache_control</td><td style="vertical-align:top;">:</td><td><div>max-age=0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_connection</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_cookie</td><td style="vertical-align:top;">:</td><td><div>session_id_first=127.0.0.1-54498cf6-4442-4789-bd67-72c977f0de77; session_id_tp=127.0.0.1-2d1dd9cc-f979-4fd5-ba47-fee966a6f1a3; sessionid=o6nv6ki5tf8eebdsssv34sdrezmc4j70; csrftoken=oUC4jOBlE7Ff3AlEbVp2SoXW70T2NdL6; session_id_welcome=127.0.0.1-93ec3a7c-d600-4206-97ec-f4c07750baf4; session_id_gap2py=127.0.0.1-48509dd2-3543-4f07-9888-086d381b683a; session_id_admin=127.0.0.1-3eb85eab-7359-4e30-8e0e-d52380e33a95</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_host</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_referer</td><td style="vertical-align:top;">:</td><td><div>http://127.0.0.1:8000/admin/default/design/gap2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_upgrade_insecure_requests</td><td style="vertical-align:top;">:</td><td><div>1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_user_agent</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.110 Safari/537.36</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path_info</td><td style="vertical-align:top;">:</td><td><div>/gap2py/index/index</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">query_string</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_addr</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_port</td><td style="vertical-align:top;">:</td><td><div>59227</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_method</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_uri</td><td style="vertical-align:top;">:</td><td><div>/gap2py/index/index</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">script_name</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_name</td><td style="vertical-align:top;">:</td><td><div>zhulieliedeMacBook-Pro.local</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_port</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_protocol</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_software</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_path</td><td style="vertical-align:top;">:</td><td><div>/Users/zhulielie/PycharmProjects/gap2py/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.14.6-stable+timestamp.2016.05.10.00.21.47</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x1046f11e0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x105b33188&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x10564b6d0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x1046f11e0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x105b33188&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x10564b6d0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">extension</td><td style="vertical-align:top;">:</td><td><div>html</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">folder</td><td style="vertical-align:top;">:</td><td><div>/Users/zhulielie/PycharmProjects/gap2py/web2py/applications/gap2py/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">function</td><td style="vertical-align:top;">:</td><td><div>index</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">global_settings</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/Users/zhulielie/PycharmProjects/gap2py/web2py/applications/gap2py/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/Users/zhulielie/PycharmProjects/gap2py/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x105b862d8: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 0, &#x27;with_scheduler&#x27;: False, &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;zhulieliedeMacBook-Pro.local&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;port&#x27;: 8000, &#x27;print_errors&#x27;: False, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/Users/zhulielie/PycharmProjects/gap2py/web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;gae&#x27;: None, &#x27;password&#x27;: &#x27;******&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/Users/zhulielie/PycharmProjects/gap2py/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>fe80::aebc:32ff:fe91:4749%en0</div></td></tr><tr><td><div>zhulieliedemacbook-pro.local</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>zhulieliedeMacBook-Pro.local</div></td></tr><tr><td><div>192.168.1.196</div></td></tr><tr><td><div>127.0.0.1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.14.6-stable+timestamp.2016.05.10.00.21.47</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_https</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_local</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_restful</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_scheduler</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_shell</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">now</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2016, 8, 12, 23, 36, 34, 325789)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_args</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_extension</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">url</td><td style="vertical-align:top;">:</td><td><div>/gap2py/index/index</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">utcnow</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2016, 8, 12, 15, 36, 34, 325798)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi</td><td style="vertical-align:top;">:</td><td><div>&lt;gluon.main.LazyWSGI object at 0x105baa550&gt;</div></td></tr></table></div>'
tRp58
sS'frames'
p59
(lp60
(dp61
S'file'
p62
S'/Users/zhulielie/PycharmProjects/gap2py/web2py/gluon/restricted.py'
p63
sS'dump'
p64
(dp65
S'environment'
p66
S"{'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'ASSIGNJS': <function ASSIGNJS>, 'AppConfig': <function AppConfig>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, ...}"
p67
sS'ccode'
p68
S'<code object <module> at 0x1075bd630, file "/Use...pplications/gap2py/controllers/index.py", line 4>'
p69
ssS'lnum'
p70
I227
sS'lines'
p71
(dp72
I224
S'            ccode = code'
p73
sI225
S'        else:'
p74
sI226
S'            ccode = compile2(code, layer)'
p75
sI227
S'        exec ccode in environment'
p76
sI228
S'    except HTTP:'
p77
sI229
S'        raise'
p78
sI230
S'    except RestrictedError:'
p79
sI231
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p80
sI222
S'    try:'
p81
sI223
S'        if isinstance(code, types.CodeType):'
p82
ssS'call'
p83
S"(code='# -*- coding: utf-8 -*-\\n# \\xe5\\xb0\\x9d\\xe8\\xaf\\x95\\n\\nimport gluon.c... print e\\n\\nresponse._vars=response._caller(index)\\n', environment={'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'ASSIGNJS': <function ASSIGNJS>, 'AppConfig': <function AppConfig>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, ...}, layer='/Users/zhulielie/PycharmProjects/gap2py/web2py/applications/gap2py/controllers/index.py')"
p84
sS'func'
p85
S'restricted'
p86
sa(dp87
g62
S'/Users/zhulielie/PycharmProjects/gap2py/web2py/applications/gap2py/controllers/index.py'
p88
sg64
(dp89
S'zcommon'
p90
S'undefined'
p91
ssg70
I5
sg71
(dp92
I2
S'# \xe5\xb0\x9d\xe8\xaf\x95'
p93
sI3
S''
sI4
S'import gluon.contrib.simplejson as sj'
p94
sI5
S'from zcommon import *'
p95
sI6
S''
sI7
S''
sI8
S'def index():'
p96
sI9
S"    user = session.user or ''"
p97
sI10
S'    if user:'
p98
sI11
S"        return dict(username='admin')"
p99
ssg83
S'()'
p100
sg85
S'<module>'
p101
sa(dp102
g62
S'/Users/zhulielie/PycharmProjects/gap2py/web2py/gluon/custom_import.py'
p103
sg64
(dp104
S'fromlist'
p105
S"('*',)"
p106
sS'level'
p107
S'-1'
p108
sS'base_importer'
p109
S'<built-in function __import__>'
p110
sS'globals'
p111
S"{'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'ASSIGNJS': <function ASSIGNJS>, 'AppConfig': <function AppConfig>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, ...}"
p112
sS'pname'
p113
S"'applications.gap2py.modules.zcommon'"
p114
sS'locals'
p115
S"{'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'ASSIGNJS': <function ASSIGNJS>, 'AppConfig': <function AppConfig>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, ...}"
p116
ssg70
I95
sg71
(dp117
I96
S'        except ImportError, e1:'
p118
sI97
S'            import_tb = sys.exc_info()[2]'
p119
sI98
S'            try:'
p120
sI99
S'                return NATIVE_IMPORTER(name, globals, locals, fromlist, level)'
p121
sI90
S'                        modules_prefix += "." + itemname'
p122
sI91
S'                    return result'
p123
sI92
S'                else:'
p124
sI93
S'                    # import like "from x import a, b, ..."'
p125
sI94
S'                    pname = modules_prefix + "." + name'
p126
sI95
S'                    return base_importer(pname, globals, locals, fromlist, level)'
p127
ssg83
S"(name='zcommon', globals={'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'ASSIGNJS': <function ASSIGNJS>, 'AppConfig': <function AppConfig>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, ...}, locals={'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'ASSIGNJS': <function ASSIGNJS>, 'AppConfig': <function AppConfig>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, ...}, fromlist=('*',), level=-1)"
p128
sg85
S'custom_importer'
p129
sasS'pyver'
p130
S'Python 2.7.10: /usr/bin/python (prefix: /System/Library/Frameworks/Python.framework/Versions/2.7)'
p131
sS'session'
p132
g57
(S's\xbc\x01\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">last_orderby</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">last_query</td><td style="vertical-align:top;">:</td><td><div>db.auth_user.id&gt;0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">user</td><td style="vertical-align:top;">:</td><td><div>admin</div></td></tr></table></div>'
tRp133
sS'etype'
p134
S"<type 'exceptions.ImportError'>"
p135
sS'date'
p136
S'Fri Aug 12 23:36:34 2016'
p137
sS'response'
p138
g57
(S's\x04\x1b\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">body</td><td style="vertical-align:top;">:</td><td><div>&lt;cStringIO.StringO object at 0x105b95fb8&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_gap2py</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-48509dd2-3543-4f07-9888-086d381b683a<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div>/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">delimiters</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>{{</div></td></tr><tr><td><div>}}</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">files</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">form_label_separator</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">formstyle</td><td style="vertical-align:top;">:</td><td><div>bootstrap3_inline</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generic_patterns</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>*</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">headers</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">X-Powered-By</td><td style="vertical-align:top;">:</td><td><div>web2py</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">menu</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div><table><tr><td><div>\xe7\xb4\xa2\xe5\xbc\x95</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/gap2py/default/index</div></td></tr><tr><td><div><table></table></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">meta</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">author</td><td style="vertical-align:top;">:</td><td><div>midnet &lt;-&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">description</td><td style="vertical-align:top;">:</td><td><div>-</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">keywords</td><td style="vertical-align:top;">:</td><td><div>-</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">models_to_run</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>^\\w+\\.py$</div></td></tr><tr><td><div>^index/\\w+\\.py$</div></td></tr><tr><td><div>^index/index/\\w+\\.py$</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">postprocessing</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_compression_level</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_expires</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_data_name</td><td style="vertical-align:top;">:</td><td><div>session_data_gap2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_file</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;/Users/zhulielie/PycharmProjects/gap2py/web2py/applications/gap2py/sessions/00c/093/127.0.0.1-48509dd2-3543-4f07-9888-086d381b683a&#x27;, mode &#x27;rb+&#x27; at 0x105b0a660&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_filename</td><td style="vertical-align:top;">:</td><td><div>/Users/zhulielie/PycharmProjects/gap2py/web2py/applications/gap2py/sessions/127.0.0.1-48509dd2-3543-4f07-9888-086d381b683a</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_hash</td><td style="vertical-align:top;">:</td><td><div>0774ad5b17575f62dbd838880e33dec8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-48509dd2-3543-4f07-9888-086d381b683a</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_name</td><td style="vertical-align:top;">:</td><td><div>session_id_gap2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_locked</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_masterapp</td><td style="vertical-align:top;">:</td><td><div>gap2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_new</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_storage_type</td><td style="vertical-align:top;">:</td><td><div>file</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">status</td><td style="vertical-align:top;">:</td><td><div>200</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">subtitle</td><td style="vertical-align:top;">:</td><td><div>\xe4\xb8\xad\xe7\xbd\x91\xe9\xa9\xb0\xe4\xba\x91</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">title</td><td style="vertical-align:top;">:</td><td><div>\xe4\xb8\xad\xe7\xbd\x91\xe7\xbd\x91\xe9\x97\xb8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">view</td><td style="vertical-align:top;">:</td><td><div>index/index.html</div></td></tr></table></div>'
tRp139
sS'locals'
p140
(dp141
S'fromlist'
p142
S"('*',)"
p143
sS'modules_prefix'
p144
S"'applications.gap2py.modules'"
p145
sS'name'
p146
S"'zcommon'"
p147
sS'level'
p148
S'-1'
p149
sS'items'
p150
S"['', 'Users', 'zhulielie', 'PycharmProjects', 'gap2py', 'web2py', 'applications', 'gap2py']"
p151
sS'base_importer'
p152
S'<built-in function __import__>'
p153
sS'globals'
p154
S"{'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'ASSIGNJS': <function ASSIGNJS>, 'AppConfig': <function AppConfig>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, ...}"
p155
sS'pname'
p156
S"'applications.gap2py.modules.zcommon'"
p157
sS'e3'
p158
S"ImportError('No module named zcommon',)"
p159
sS'e1'
p160
S"ImportError('No module named zcommon',)"
p161
sS'import_tb'
p162
S'None'
p163
sg140
S"{'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'ASSIGNJS': <function ASSIGNJS>, 'AppConfig': <function AppConfig>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, ...}"
p164
sS'oname'
p165
S"'zcommon'"
p166
sssS'traceback'
p167
S'Traceback (most recent call last):\n  File "/Users/zhulielie/PycharmProjects/gap2py/web2py/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/Users/zhulielie/PycharmProjects/gap2py/web2py/applications/gap2py/controllers/index.py", line 5, in <module>\n    from zcommon import *\n  File "/Users/zhulielie/PycharmProjects/gap2py/web2py/gluon/custom_import.py", line 95, in custom_importer\n    return base_importer(pname, globals, locals, fromlist, level)\nImportError: No module named zcommon\n'
p168
s.